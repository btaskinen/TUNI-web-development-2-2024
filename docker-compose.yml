# This is the docker-compose-yml file that must be able to start
# your group's backend.

# Remember to comment this file well!

# After you have Docker and Docker Compose installed,
# and this file is ready, you use this file and run it with:
# `docker-compose up --build`

version: '3'

# services describes the different microservices that are build with the docker-compose file.
services:
  server-a:
    # Server A image is build from Dockerfile found in folder groupbt/server-a
    image: groupbt/server-a
    # 'depends_on' tells docker that Server A depends on the message broker rabbitmq and that the message broker needs
    # to run before Server A can be started. The wait-for-it.sh ensures that this is the case.
    depends_on:
      - rabbitmq
    command: ['./utils/wait-for-it.sh', 'rabbitmq:5672', '--', 'npm', 'start']
    # Build command instructs to build Server A from Dockerfle in folder ./backend/server-a.
    build:
      dockerfile: Dockerfile
      context: ./backend/server-a
    # Ports of the container that are exposed.
    ports:
      - '8080:8080'
    # Server A is part of the network 'backend'.
    networks:
      - backend

  rabbitmq:
    # set lates rabbitmq image
    image: rabbitmq:3.13-management
    # give a name for the container
    container_name: 'rabbitmq'
    # define the local ports that are exposed to container ports
    ports:
      - 5672:5672
      - 15672:15672
    # map volues to preserve queues and logs on container restart
    volumes:
      - ~/.docker.conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq/
    # Network the Message Broker is part of
    networks:
      - backend
  # Instruction for building Server B are analogous to instructions for Server A.
  server-b:
    image: groupbt/server-b
    depends_on:
      - rabbitmq
    command: ['./utils/wait-for-it.sh', 'rabbitmq:5672', '--', 'npm', 'start']
    build:
      dockerfile: Dockerfile
      context: ./backend/server-b
    networks:
      - backend
  frontend:
    image: groupbt/frontend
    # Build command instructs to build fronten from Dockerfle in folder ./frontend.
    build:
      dockerfile: Dockerfile
      context: ./frontend
    ports:
      - '5173:5173'
    networks:
      - backend

# Here we create a named network, that all the backend components
# must be added to for them to be able to communicate through
# exposed ports.
networks:
  backend:
